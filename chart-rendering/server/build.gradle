/*
 *  Copyright 2024, TeamDev. All rights reserved.
 *
 *  Redistribution and use in source and/or binary forms, with or without
 *  modification, must retain the above copyright notice and the following
 *  disclaimer.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

plugins {
    // Apply the java plugin to add support for Java.
    id('java')

    // Apply the application plugin to add support for building a CLI application.
    id('io.micronaut.application') version "4.3.4"

    // Provides convenience methods for adding JxBrowser dependencies into a project.
    id('com.teamdev.jxbrowser') version '1.0.2'
}

// Set the Java version to 17.
tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

micronaut {
    version "4.3.4"
    runtime("netty")
}

repositories {
    mavenCentral()
}

jxbrowser {
    version = '8.0.0-eap.1'
    includePreviewBuilds()
}

dependencies {
    // Use the JxBrowser cross-platform binaries.
    implementation(jxbrowser.crossPlatform)
    runtimeOnly("io.micronaut.serde:micronaut-serde-jackson")
}

application {
    // Define the main class for the server application.
    mainClass.set('com.teamdev.jxbrowser.gallery.charts.Application')
}

run {
    // Assign all Java system properties from the command line to the `run` task.
    systemProperties System.getProperties()
}
